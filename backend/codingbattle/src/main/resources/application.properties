# Application Configuration
spring.application.name=coding-battle-backend
server.port=8080

# MongoDB Configuration
spring.data.mongodb.uri=mongodb://localhost:27017/coding_battle_db
# For Docker: spring.data.mongodb.uri=mongodb://root:root@mongodb:27017/coding_battle_db?authSource=admin

# CORS Configuration
cors.allowed-origins=http://localhost:3000,http://localhost:5173
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allow-credentials=true
cors.max-age=3600

# Security Configuration
app.security.enabled=false

# Code Execution Configuration
code.execution.timeout-seconds=10
code.execution.memory-limit-mb=256
code.execution.temp-dir=/tmp/coding-battle

# Language Commands (can be customized per environment)
python.command=python3
java.command=java
gcc.command=gcc
gpp.command=g++
node.command=node

# Docker Sandbox Configuration (optional)
# sandbox.command.prefix=docker run --rm -v #{tempDir}:/workspace -w /workspace --memory=256m --cpus=0.5 --network=none --user=1000:1000

# Logging Configuration
logging.level.com.example.codingbattle=DEBUG
logging.level.org.springframework.data.mongodb=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Jackson Configuration
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.write-dates-as-timestamps=false

# Validation Configuration
spring.validation.enabled=true

# MongoDB Auditing
spring.data.mongodb.auto-index-creation=true

# Management and Health Check
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized